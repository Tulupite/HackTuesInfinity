package com.example.demo;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import java.util.ArrayList;
import java.util.List;

@Controller // This means that this class is a Controller
@RequestMapping(path="/demo")//tova e bazoviqt put localhost/demo
public class MainController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;

    private BCryptPasswordEncoder passwordEncoder = new BCryptPasswordEncoder();

    @PostMapping(path="/add") //tova otiva na:localhost/demo/add?email=...&passwor = ...  . front enda trqbva da vika tozi url za da suzdade user
    public @ResponseBody String addNewUser (@RequestParam String email,@RequestParam String password) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        User n = new User();
        n.setEmail(email);
        n.setPassword(passwordEncoder.encode(password));
        userRepository.save(n);
        return "Saved";

    }

    @GetMapping(path="/all")
    public @ResponseBody
    List<UserDTO> getAllUsers() {
        // This returns a JSON or XML with the users
        Iterable<User> dbUsers = userRepository.findAll();
        List<UserDTO> dtoUsres = new ArrayList<>();
        for(User user:dbUsers){
            UserDTO dto = new UserDTO();
            dto.setEmail(user.getEmail());
            dto.setName(user.getId().toString());
            dtoUsres.add(dto);

        };
        return dtoUsres;
    }
}